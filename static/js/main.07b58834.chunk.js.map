{"version":3,"sources":["helpers.ts","components/forms/AddConditionForm.tsx","constants.ts","components/shared/KeyInput.tsx","components/shared/KeyCodeAndPointingButtonInput.tsx","components/forms/FromEventForm.tsx","components/forms/ToEventForm.tsx","components/forms/ToEventFormsContainer.tsx","components/forms/ManipulatorForm.tsx","components/forms/RuleForm.tsx","context/FormContext.tsx","initialStates.ts","components/MainForm.tsx","AppLayout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["suffix","n","d","titleCase","string","sentence","toLowerCase","split","i","length","toUpperCase","slice","join","conditionTypes","AddConditionForm","condition","index","useState","setConditionState","description","showOptional","setShowOptional","useEffect","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","Box","p","FormControl","fullWidth","variant","InputLabel","id","Select","labelId","value","map","item","MenuItem","key","bundle_identifiers","identifier","bundleIndex","TextField","label","onChange","e","newCondition","setBundleIdentifier","target","file_paths","filePath","filePathIndex","setFilePath","Button","onClick","push","MODIFIERS","KEY_CODES","KeyInput","modifiers","keyCodes","multiple","autoHighlight","freeSolo","options","placeholderText","Autocomplete","getOptionLabel","o","renderInput","params","placeholder","pointingButtons","KeyCodeAndPointingButtonInput","eventObject","setEventObject","obj","keyCode","consumerKeyCode","_eventObject","consumer_key_code","key_code","newOptional","marginBottom","ButtonGroup","disabled","color","_e","v","console","log","margin","currentTarget","pointing_button","event","keyOrder","keyUpWhen","FromEventForm","fromObject","setFromObject","handleModifierChange","type","className","mandatory","optional","simultaneous","newSimultaneousObject","newFromObject","_","findIndex","_id","uniqueId","addSimultaneous","FormControlLabel","control","Checkbox","checked","simultaneous_options","detect_key_down_uninterruptedly","ToEventForm","toObject","setToObject","removeToObject","pointingButton","simultaneousOptions","newToObject","m","lazy","repeat","halt","FormLabel","startIcon","toFields","ToEventFormsContainer","manipulator","setManipulator","toField","toFieldsIndex","to","toEventFormProps","newManipulator","splice","types","ManipulatorForm","from","conditions","Typography","addToEventForm","size","marginTop","addConditionToRule","RuleForm","rule","setRule","manipulators","newRule","multiline","FormContext","createContext","setFormState","setRuleState","getRuleByIndex","formState","initialFromObject","initialManipulator","getInitialRule","generateWithId","prefix","parseKey","parseKeys","parseStateToMinimumJSON","state","parsedState","cloneDeep","rules","forEach","ruleIndex","_from","Object","assign","isEmpty","parseFromObject","newSimultaneous","MainForm","initialFormState","title","JSON","parse","window","atob","location","href","indexOf","newFormState","Provider","Container","Grid","container","direction","justify","xs","readOnly","stringify","base64string","btoa","url","history","replaceState","undefined","alert","onBlur","text","parsedJSON","isPlainObject","parseJSONfirst","AppLayout","AppBar","position","Toolbar","data-icon","data-size","data-show-count","aria-label","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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S,MAAO,eACPT,MAAO,gBAET,CACES,MAAO,gBACPT,MAAO,iBAET,CACES,MAAO,oBACPT,MAAO,YAET,CACES,MAAO,qBACPT,MAAO,aAET,CACES,MAAO,aACPT,MAAO,cAET,CACES,MAAO,cACPT,MAAO,gBAGEuB,EAAY,CACvB,CACEdwBACPT,MAAO,0BAET,CACES,MAAO,UACPT,MAAO,OAET,CACES,MAAO,YACPT,MAAO,aAET,CACES,MAAO,WACPT,MAAO,YAET,CACES,MAAO,WACPT,MAAO,YAET,CACES,MAAO,aACPT,MAAO,cAET,CACES,MAAO,aACPT,MAAO,cAET,CACES,MAAO,cACPT,MAAO,eAET,CACES,MAAO,QACPT,MAAO,mBAET,CACES,MAAO,eACPT,MAAO,aAET,CACES,MAAO,mBACPT,MAAO,gBAET,CACES,MAAO,oBACPT,MAAO,iBAET,CACES,MAAO,gBACPT,MAAO,aAET,CACES,MAAO,YACPT,MAAO,SAET,CACES,MAAO,YACPT,MAAO,SAET,CACES,MAAO,aACPT,MAAO,UAET,CACES,MAAO,YACPT,MAAO,SAET,CACES,MAAO,qBACPT,MAAO,UAET,CACES,MAAO,YACPT,MAAO,cAET,CACES,MAAO,sBACPT,MAAO,uBAET,CACES,MAAO,6BACPT,MAAO,gCAET,CACES,MAAO,6BACPT,MAAO,gCAET,CACES,MAAO,kBACPT,MAAO,mBAET,CACES,MAAO,YACPT,MAAO,aAET,CACES,MAAO,+BACPT,MAAO,0BAET,CACES,MAAO,+BACPT,MAAO,0BAET,CACES,MAAO,oBACPT,MAAO,UAET,CACES,MAAO,gBACPT,MAAO,iBAET,CACES,MAAO,oBACPT,MAAO,cAET,CACES,MAAO,OACPT,MAAO,QAET,CACES,MAAO,cACPT,MAAO,oBAET,CACES,MAAO,YACPT,MAAO,qBC7SIwB,EA1CmB,SAAC,GAS5B,IAAD,IARJxB,aAQI,MARI,GAQJ,MAPJU,gBAOI,MAPO,SAAAC,KAOP,MANJc,iBAMI,aALJC,gBAKI,aAJJC,gBAII,aAHJC,qBAGI,aAFJC,gBAEI,aA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","file":"static/js/main.07b58834.chunk.js","sourcesContent":["export const suffix = (n: number) => {\n  var s = ['th', 'st', 'nd', 'rd'];\n  var d = (n | 0) % 100;\n  return d > 3 && d < 21 ? 'th' : s[d % 10] || 'th';\n};\n\nexport const titleCase = (string: string) => {\n  var sentence = string.toLowerCase().split('_');\n  for (var i = 0; i < sentence.length; i++) {\n    sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\n  }\n  return sentence.join(' ');\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  Button,\n} from '@material-ui/core';\nimport { titleCase } from '../../helpers';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\ninterface Props {\n  condition: any;\n  index: number;\n}\n\nconst conditionTypes: string[] = [\n  'frontmost_application_if',\n  'frontmost_application_unless',\n];\n\nconst AddConditionForm: React.FC<Props> = ({ condition, index }) => {\n  const [conditionState, setConditionState] = useState(condition);\n\n  const [showOptional, setShowOptional] = useState({\n    description: false,\n  });\n\n  const addBundleIdentifier = () => {\n    const newCondition: any = { ...condition };\n    newCondition.bundle_identifiers.push('');\n    setConditionState(newCondition);\n  };\n\n  const addFilePath = () => {\n    const newCondition: any = { ...condition };\n    newCondition.file_paths.push('');\n    setConditionState(newCondition);\n  };\n\n  const setFilePath = (bundleIndex: number, value: string) => {\n    const newCondition: any = { ...condition };\n    newCondition.file_paths[bundleIndex] = value;\n    setConditionState(newCondition);\n  };\n  const setBundleIdentifier = (bundleIndex: number, value: string) => {\n    const newCondition: any = { ...condition };\n    newCondition.bundle_identifiers[bundleIndex] = value;\n    setConditionState(newCondition);\n  };\n\n  useEffect(() => {\n    setConditionState(condition);\n    // const newConditions = [...ruleState.conditions];\n    // newConditions[index] = condition;\n    // setRuleState(ruleIndex, { ...ruleState, conditions: newConditions });\n  }, [condition]);\n\n  return (\n    <ExpansionPanel defaultExpanded={index === 0}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        Condition {index + 1}\n      </ExpansionPanelSummary>\n      <Box p={1}>\n        <FormControl fullWidth variant=\"filled\">\n          <InputLabel id=\"condition_type\">Condition Type</InputLabel>\n          <Select labelId=\"condition_type\" value={conditionTypes[0]}>\n            {conditionTypes.map(item => (\n              <MenuItem value={item} key={item}>\n                {titleCase(item)}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        {!!condition?.bundle_identifiers?.length && (\n          <ExpansionPanel defaultExpanded>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              Bundle Identifiers\n            </ExpansionPanelSummary>\n\n            <Box p={1}>\n              {condition.bundle_identifiers.map(\n                (identifier: string, bundleIndex: number) => (\n                  <TextField\n                    key={bundleIndex}\n                    value={identifier}\n                    fullWidth\n                    variant=\"filled\"\n                    label={`Regex Bundle Identifier ${bundleIndex + 1}`}\n                    onChange={e => {\n                      setBundleIdentifier(bundleIndex, e.target.value);\n                    }}\n                  />\n                ),\n              )}\n            </Box>\n          </ExpansionPanel>\n        )}\n        {!!condition?.file_paths?.length && (\n          <ExpansionPanel defaultExpanded>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              File Paths\n            </ExpansionPanelSummary>\n\n            <Box p={1}>\n              {condition.file_paths.map(\n                (filePath: string, filePathIndex: number) => (\n                  <TextField\n                    value={filePath}\n                    fullWidth\n                    variant=\"filled\"\n                    label={`Regex File Path ${filePathIndex + 1}`}\n                    onChange={e => {\n                      setFilePath(filePathIndex, e.target.value);\n                    }}\n                  />\n                ),\n              )}\n            </Box>\n          </ExpansionPanel>\n        )}\n\n        {showOptional.description && (\n          <TextField\n            fullWidth\n            variant=\"filled\"\n            label={`Condition Description (optional)`}\n            value={condition.description}\n            onChange={e => {\n              setConditionState({ ...condition, description: e.target.value });\n            }}\n          />\n        )}\n\n        <Button onClick={addBundleIdentifier}>Add Bundle Identifier</Button>\n        <Button onClick={addFilePath}>Add File Path</Button>\n        <Button\n          onClick={() =>\n            setShowOptional({\n              ...showOptional,\n              description: !showOptional.description,\n            })\n          }\n        >\n          {showOptional.description ? 'Remove' : 'Add'} Description\n        </Button>\n      </Box>\n    </ExpansionPanel>\n  );\n};\n\nexport default AddConditionForm;\n","export const MODIFIERS = [\n  {\n    label: 'Function key',\n    value: 'fn',\n  },\n  {\n    label: 'Left Command',\n    value: 'left_gui',\n  },\n  {\n    label: 'Right Command',\n    value: 'right_gui',\n  },\n  {\n    label: 'Left Control',\n    value: 'left_control',\n  },\n  {\n    label: 'Right Control',\n    value: 'right_control',\n  },\n  {\n    label: 'Left Alt / Option',\n    value: 'left_alt',\n  },\n  {\n    label: 'Right Alt / Option',\n    value: 'right_alt',\n  },\n  {\n    label: 'Left Shift',\n    value: 'left_shift',\n  },\n  {\n    label: 'Right Shift',\n    value: 'right_shift',\n  },\n];\nexport const KEY_CODES = [\n  {\n    label: '1',\n    value: '1',\n  },\n  {\n    label: '2',\n    value: '2',\n  },\n  {\n    label: '3',\n    value: '3',\n  },\n  {\n    label: '4',\n    value: '4',\n  },\n  {\n    label: '5',\n    value: '5',\n  },\n  {\n    label: '6',\n    value: '6',\n  },\n  {\n    label: '7',\n    value: '7',\n  },\n  {\n    label: '8',\n    value: '8',\n  },\n  {\n    label: '9',\n    value: '9',\n  },\n  {\n    label: '0',\n    value: '0',\n  },\n  {\n    label: 'A',\n    value: 'a',\n  },\n  {\n    label: 'B',\n    value: 'b',\n  },\n  {\n    label: 'C',\n    value: 'c',\n  },\n  {\n    label: 'D',\n    value: 'd',\n  },\n  {\n    label: 'E',\n    value: 'e',\n  },\n  {\n    label: 'F',\n    value: 'f',\n  },\n  {\n    label: 'G',\n    value: 'g',\n  },\n  {\n    label: 'H',\n    value: 'h',\n  },\n  {\n    label: 'I',\n    value: 'i',\n  },\n  {\n    label: 'J',\n    value: 'j',\n  },\n  {\n    label: 'K',\n    value: 'k',\n  },\n  {\n    label: 'L',\n    value: 'l',\n  },\n  {\n    label: 'M',\n    value: 'm',\n  },\n  {\n    label: 'N',\n    value: 'n',\n  },\n  {\n    label: 'O',\n    value: 'o',\n  },\n  {\n    label: 'P',\n    value: 'p',\n  },\n  {\n    label: 'Q',\n    value: 'q',\n  },\n  {\n    label: 'R',\n    value: 'r',\n  },\n  {\n    label: 'S',\n    value: 's',\n  },\n  {\n    label: 'T',\n    value: 't',\n  },\n  {\n    label: 'U',\n    value: 'u',\n  },\n  {\n    label: 'V',\n    value: 'v',\n  },\n  {\n    label: 'W',\n    value: 'w',\n  },\n  {\n    label: 'X',\n    value: 'x',\n  },\n  {\n    label: 'Y',\n    value: 'y',\n  },\n  {\n    label: 'Z',\n    value: 'z',\n  },\n  {\n    label: 'F1',\n    value: 'f1',\n  },\n  {\n    label: 'F2',\n    value: 'f2',\n  },\n  {\n    label: 'F3',\n    value: 'f3',\n  },\n  {\n    label: 'F4',\n    value: 'f4',\n  },\n  {\n    label: 'F5',\n    value: 'f5',\n  },\n  {\n    label: 'F6',\n    value: 'f6',\n  },\n  {\n    label: 'F7',\n    value: 'f7',\n  },\n  {\n    label: 'F8',\n    value: 'f8',\n  },\n  {\n    label: 'F9',\n    value: 'f9',\n  },\n  {\n    label: 'F10',\n    value: 'f10',\n  },\n  {\n    label: 'F11',\n    value: 'f11',\n  },\n  {\n    label: 'F12',\n    value: 'f12',\n  },\n  {\n    label: 'Escape',\n    value: 'escape',\n  },\n  {\n    label: '` Grave Accent, Tilde',\n    value: 'grave_accent_and_tilde',\n  },\n  {\n    label: 'Tab key',\n    value: 'tab',\n  },\n  {\n    label: 'Caps Lock',\n    value: 'caps_lock',\n  },\n  {\n    label: 'Spacebar',\n    value: 'spacebar',\n  },\n  {\n    label: 'Up Arrow',\n    value: 'up_arrow',\n  },\n  {\n    label: 'Left Arrow',\n    value: 'left_arrow',\n  },\n  {\n    label: 'Down Arrow',\n    value: 'down_arrow',\n  },\n  {\n    label: 'Right Arrow',\n    value: 'right_arrow',\n  },\n  {\n    label: 'Enter',\n    value: 'return_or_enter',\n  },\n  {\n    label: ' (Backslash)',\n    value: 'backslash',\n  },\n  {\n    label: '[ (Open Bracket)',\n    value: 'open_bracket',\n  },\n  {\n    label: '] (Close Bracket)',\n    value: 'close_bracket',\n  },\n  {\n    label: '; (Semicolon)',\n    value: 'semicolon',\n  },\n  {\n    label: \"' (Quote)\",\n    value: 'quote',\n  },\n  {\n    label: ', (Comma)',\n    value: 'comma',\n  },\n  {\n    label: '. (Period)',\n    value: 'period',\n  },\n  {\n    label: '/ (Slash)',\n    value: 'slash',\n  },\n  {\n    label: '- (Dash or Hyphen)',\n    value: 'hyphen',\n  },\n  {\n    label: '= (Equal)',\n    value: 'equal_sign',\n  },\n  {\n    label: 'Delete or Backspace',\n    value: 'delete_or_backspace',\n  },\n  {\n    label: 'Decrease Screen Brightness',\n    value: 'display_brightness_decrement',\n  },\n  {\n    label: 'Increase Screen Brightness',\n    value: 'display_brightness_increment',\n  },\n  {\n    label: 'Mission Control',\n    value: 'mission_control',\n  },\n  {\n    label: 'Launchpad',\n    value: 'launchpad',\n  },\n  {\n    label: 'Keyboard Brightness Decrease',\n    value: 'illumination_decrement',\n  },\n  {\n    label: 'Keyboard Brightness Increase',\n    value: 'illumination_increment',\n  },\n  {\n    label: 'Rewind / Previous',\n    value: 'rewind',\n  },\n  {\n    label: 'Play or Pause',\n    value: 'play_or_pause',\n  },\n  {\n    label: 'Fastfoward / Next',\n    value: 'fastforwad',\n  },\n  {\n    label: 'Mute',\n    value: 'mute',\n  },\n  {\n    label: 'Volume Down',\n    value: 'volume_decrement',\n  },\n  {\n    label: 'Volume Up',\n    value: 'volume_increment',\n  },\n];\n","import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { MODIFIERS, KEY_CODES } from '../../constants';\nimport { TextField } from '@material-ui/core';\nimport Modifier from '../../types/Modifier';\n\ninterface Props {\n  // value: Modifier[];\n  value: any;\n  onChange: (e: any, value: any) => void;\n  modifiers?: boolean;\n  keyCodes?: boolean;\n  multiple?: any;\n  autoHighlight?: boolean;\n  freeSolo?: boolean;\n  label?: string;\n}\n\nconst KeyInput: React.FC<Props> = ({\n  value = [],\n  onChange = e => {},\n  modifiers = false,\n  keyCodes = false,\n  multiple = true,\n  autoHighlight = false,\n  freeSolo = true,\n  label = 'keys',\n}) => {\n  let options: Modifier[] = [];\n  let placeholderText: string[] = [];\n  if (keyCodes) {\n    options = [...options, ...KEY_CODES];\n    placeholderText.push('Key Codes');\n  }\n  if (modifiers) {\n    options = [...options, ...MODIFIERS];\n    placeholderText.push('Modifiers');\n  }\n  return (\n    <Autocomplete\n      multiple={multiple}\n      freeSolo={freeSolo}\n      options={options}\n      getOptionLabel={(o: any) => (typeof o === 'object' ? o.label : o) || ''}\n      value={typeof value === 'string' ? [value] : value}\n      onChange={onChange}\n      autoHighlight={autoHighlight}\n      renderInput={params => (\n        <TextField\n          {...params}\n          variant=\"filled\"\n          label={label}\n          placeholder={placeholderText.join(', ')}\n          fullWidth\n        />\n      )}\n    />\n  );\n};\n\nexport default KeyInput;\n","import React, { useEffect, useState } from 'react';\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  ButtonGroup,\n  Button,\n  Typography,\n  FormControl,\n  Box,\n} from '@material-ui/core';\nimport KeyInput from './KeyInput';\nconst pointingButtons: any[] = [\n  {\n    label: 'None',\n    value: '',\n  },\n  {\n    label: 'Left Click',\n    value: 'button1',\n  },\n  {\n    label: 'Right Click',\n    value: 'button2',\n  },\n  {\n    label: 'Middle Click',\n    value: 'button3',\n  },\n  {\n    label: 'Mouse 4',\n    value: 'button4',\n  },\n  {\n    label: 'Mouse 5',\n    value: 'button5',\n  },\n];\n\ninterface Props {\n  eventObject: any;\n  setEventObject: (obj: any) => void;\n}\n\nconst KeyCodeAndPointingButtonInput: React.FC<Props> = ({\n  eventObject = {},\n  setEventObject = obj => {},\n}) => {\n  // const [state, setState] = useState(eventObject);\n\n  const [showOptional, setShowOptional] = useState({\n    keyCode: false,\n    consumerKeyCode: false,\n  });\n\n  useEffect(() => {\n    const _eventObject = { ...eventObject };\n    if (showOptional.keyCode) {\n      delete _eventObject.consumer_key_code;\n    }\n    if (showOptional.consumerKeyCode) {\n      delete _eventObject.key_code;\n    }\n    if (!showOptional.keyCode && !showOptional.consumerKeyCode) {\n      delete _eventObject.key_code;\n      delete _eventObject.consumer_key_code;\n    }\n  }, [showOptional]);\n\n  useEffect(() => {\n    const newOptional = {\n      keyCode: !!eventObject.key_code,\n      consumerKeyCode: !!eventObject.consumer_key_code,\n    };\n    setShowOptional(newOptional);\n    // setState(eventObject);\n  }, [eventObject]);\n\n  return (\n    <Box marginBottom={2}>\n      <ButtonGroup>\n        <Button\n          disabled={showOptional.keyCode}\n          variant=\"contained\"\n          onClick={() => {\n            setShowOptional({\n              ...showOptional,\n              keyCode: true,\n              consumerKeyCode: false,\n            });\n          }}\n        >\n          Key Code\n        </Button>\n        <Button\n          disabled={showOptional.consumerKeyCode}\n          variant=\"contained\"\n          onClick={() => {\n            setShowOptional({\n              ...showOptional,\n              keyCode: false,\n              consumerKeyCode: true,\n            });\n          }}\n        >\n          Consumer Key Code\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setShowOptional({\n              ...showOptional,\n              keyCode: false,\n              consumerKeyCode: false,\n            });\n          }}\n          disabled={!(showOptional.keyCode || showOptional.consumerKeyCode)}\n          color=\"secondary\"\n        >\n          Disable\n        </Button>\n      </ButtonGroup>\n      <Box marginBottom={1}>\n        {showOptional.keyCode && (\n          <KeyInput\n            keyCodes\n            modifiers\n            multiple={false}\n            value={eventObject.key_code}\n            autoHighlight={false}\n            label=\"Key Code (optional)\"\n            onChange={(_e: any, v: any) => {\n              console.log(' w');\n              setEventObject({\n                ...eventObject,\n                key_code: typeof v === 'string' ? { label: v, value: v } : v,\n              });\n            }}\n          />\n        )}\n        {showOptional.consumerKeyCode && (\n          <TextField\n            placeholder=\"\"\n            margin=\"normal\"\n            variant=\"filled\"\n            label=\"Consumer Key Code (optional)\"\n            fullWidth\n            value={eventObject.consumer_key_code || ''}\n            onChange={e => {\n              setEventObject({\n                ...eventObject,\n                consumer_key_code: e.currentTarget.value,\n              });\n            }}\n          />\n        )}\n      </Box>\n\n      <Box>\n        <FormControl variant=\"filled\" fullWidth>\n          <InputLabel id=\"type\">Pointing Button (optional)</InputLabel>\n          <Select\n            labelId=\"type\"\n            value={eventObject.pointing_button || ''}\n            onChange={(event: any) => {\n              setEventObject({\n                ...eventObject,\n                pointing_button: event.target.value || '',\n              });\n            }}\n          >\n            {pointingButtons.map(({ label, value }) => (\n              <MenuItem value={value} key={value}>\n                {label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n    </Box>\n  );\n};\n\nexport default KeyCodeAndPointingButtonInput;\n","import React from 'react';\nimport {\n  Box,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\n\nimport IFromEventDefinition from '../../types/IFromEventDefinition';\nimport KeyInput from '../shared/KeyInput';\nimport KeyCodeAndPointingButtonInput from '../shared/KeyCodeAndPointingButtonInput';\nimport _ from 'lodash';\nimport { suffix, titleCase } from '../../helpers';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst optionalBoolean: string[] = ['none', 'true', 'false'];\nconst keyOrder: string[] = ['none', 'insensitive', 'strict', 'strict_inverse'];\nconst keyUpWhen: string[] = ['none', 'any', 'all'];\n\ninterface Props {\n  fromObject: IFromEventDefinition;\n  setFromObject: (args0: IFromEventDefinition) => void;\n}\n\nconst FromEventForm: React.FC<Props> = ({ fromObject, setFromObject }) => {\n  const handleModifierChange = (event: any, value: any, type: string) => {\n    setFromObject({\n      ...fromObject,\n      modifiers: {\n        ...fromObject.modifiers,\n        [type]: value.map((v: any) =>\n          typeof v === 'string' ? { label: v, value: v } : v,\n        ),\n      },\n    });\n  };\n\n  const addSimultaneous = () => {\n    const newFromObject = { ...fromObject };\n    newFromObject.simultaneous = newFromObject.simultaneous || [];\n    newFromObject.simultaneous.push({\n      _id: _.uniqueId('simultaneous_'),\n    });\n    setFromObject(newFromObject);\n  };\n\n  return (\n    <Box className=\"form-container\" p={1}>\n      <KeyCodeAndPointingButtonInput\n        setEventObject={setFromObject}\n        eventObject={fromObject}\n      />\n      <div>\n        <div>\n          <KeyInput\n            modifiers\n            value={fromObject.modifiers?.mandatory || []}\n            label=\"Mandatory Modifiers (optional)\"\n            onChange={(event: any, value: any) =>\n              handleModifierChange(event, value, 'mandatory')\n            }\n          />\n        </div>\n        <div>\n          <KeyInput\n            modifiers\n            value={fromObject.modifiers?.optional || []}\n            label=\"Optional Modifiers (optional)\"\n            onChange={(event: any, value: any) =>\n              handleModifierChange(event, value, 'optional')\n            }\n          />\n        </div>\n      </div>\n      <Box>\n        {fromObject.simultaneous?.map((simultaneous: any, index: number) => {\n          const setSimultaneous = (newSimultaneousObject: any) => {\n            const newFromObject = { ...fromObject };\n            const index = _.findIndex(fromObject.simultaneous, {\n              _id: newSimultaneousObject._id,\n            });\n            newFromObject.simultaneous = newFromObject.simultaneous || [];\n            newFromObject.simultaneous[index] = newSimultaneousObject;\n            setFromObject(newFromObject);\n          };\n          return (\n            <ExpansionPanel key={index} defaultExpanded={index === 0}>\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                {index + 1}\n                {suffix(index + 1)} Simultaneous Event\n              </ExpansionPanelSummary>\n              <Box p={1}>\n                <KeyCodeAndPointingButtonInput\n                  eventObject={simultaneous}\n                  setEventObject={setSimultaneous}\n                />\n              </Box>\n            </ExpansionPanel>\n          );\n        })}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => addSimultaneous()}\n        >\n          Add Simultaneous Event\n        </Button>\n      </Box>\n      <Box>\n        <ExpansionPanel>\n          <ExpansionPanelSummary>Simultaneous Options</ExpansionPanelSummary>\n          <Box p={1}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={\n                    !!fromObject?.simultaneous_options\n                      ?.detect_key_down_uninterruptedly\n                  }\n                  onChange={() => {}}\n                />\n              }\n              label=\"Detect Key Down Uninterruptedly\"\n            />\n            <FormControl fullWidth variant=\"filled\">\n              <InputLabel id=\"key_down_order\">Key Down Order</InputLabel>\n              <Select labelId=\"key_down_order\" value={keyOrder[0]}>\n                {keyOrder.map(item => (\n                  <MenuItem value={item} key={item}>\n                    {titleCase(item)}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl fullWidth variant=\"filled\">\n              <InputLabel id=\"key_up_order\">Key Up Order</InputLabel>\n              <Select labelId=\"key_up_order\" value={keyOrder[0]}>\n                {keyOrder.map(item => (\n                  <MenuItem value={item} key={item}>\n                    {titleCase(item)}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl fullWidth variant=\"filled\">\n              <InputLabel id=\"key_up_when\">Key Up When</InputLabel>\n              <Select labelId=\"key_up_when\" value={keyUpWhen[0]}>\n                {keyUpWhen.map(item => (\n                  <MenuItem value={item} key={item}>\n                    {titleCase(item)}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <Button color=\"primary\" variant=\"contained\">\n              Add to_after_key_up event\n            </Button>\n          </Box>\n        </ExpansionPanel>\n      </Box>\n    </Box>\n  );\n};\n\nexport default FromEventForm;\n","import React, { useState, useContext, useEffect } from 'react';\nimport KeyCodeAndPointingButtonInput from '../shared/KeyCodeAndPointingButtonInput';\nimport FormContext from '../../context/FormContext';\nimport IToEventDefinition from '../../types/IToEventDefinition';\nimport Modifier from '../../types/Modifier';\nimport {\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n  Button,\n  Box,\n} from '@material-ui/core';\nimport KeyInput from '../shared/KeyInput';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IManipulator from '../../types/IManipulator';\n\ninterface Props {\n  toObject: IToEventDefinition;\n  setToObject: (arg0: IToEventDefinition) => void;\n  removeToObject: () => void;\n}\n\nconst ToEventForm: React.FC<Props> = ({\n  toObject,\n  setToObject,\n  removeToObject,\n}) => {\n  const [showOptional, setShowOptional] = useState({\n    keyCode: false,\n    consumerKeyCode: false,\n    pointingButton: false,\n    simultaneous: false,\n    simultaneousOptions: false,\n  });\n\n  useEffect(() => {\n    const newToObject: any = { ...toObject };\n    if (newToObject.pointing_button === 'disabled') {\n      delete newToObject.pointing_button;\n    }\n    if (!showOptional.keyCode && !!newToObject.key_code) {\n      delete newToObject.key_code;\n    } else {\n      newToObject.key_code = newToObject.key_code?.value;\n    }\n    if (!showOptional.consumerKeyCode && !!newToObject.consumer_key_code) {\n      delete newToObject.consumer_key_code;\n    }\n    if (!newToObject.modifiers?.length) {\n      delete newToObject.modifiers;\n    } else {\n      if (typeof newToObject.modifiers === 'string') {\n        newToObject.modifiers = [newToObject.modifiers];\n      }\n      newToObject.modifiers = newToObject.modifiers.map(\n        (m: Modifier) => m.value,\n      );\n    }\n    if (newToObject.lazy === false) {\n      delete newToObject.lazy;\n    }\n    if (newToObject.repeat === true) {\n      delete newToObject.repeat;\n    }\n    if (newToObject.halt === false) {\n      delete newToObject.halt;\n    }\n    // const toArray = [...ruleState[type]];\n    // toArray[index] = { ...newToObject };\n\n    // setRuleState({\n    //   ...ruleState,\n    //   [type]: toArray,\n    // });\n  }, [toObject, showOptional]);\n  return (\n    <Box className=\"form-container\">\n      <KeyCodeAndPointingButtonInput\n        setEventObject={setToObject}\n        eventObject={toObject}\n      />\n      <KeyInput\n        freeSolo={false}\n        modifiers\n        value={toObject.modifiers}\n        label=\"Modifiers\"\n        onChange={(_e: any, value: any) => {\n          console.log({ value });\n          setToObject({\n            ...toObject,\n            modifiers: value.map((v: any) =>\n              typeof v === 'string' ? { label: v, value: v } : v,\n            ),\n          });\n        }}\n      />\n      <FormControl fullWidth>\n        <FormLabel>Additional Options</FormLabel>\n        <FormControlLabel\n          label=\"Lazy\"\n          control={\n            <Checkbox\n              checked={!!toObject.lazy}\n              onChange={e => {\n                setToObject({ ...toObject, lazy: e.target.checked });\n              }}\n            />\n          }\n        />\n        <FormControlLabel\n          label=\"Repeat\"\n          control={\n            <Checkbox\n              checked={!!toObject.repeat}\n              onChange={e => {\n                setToObject({ ...toObject, repeat: e.target.checked });\n              }}\n            />\n          }\n        />\n        <FormControlLabel\n          label=\"Halt\"\n          control={\n            <Checkbox\n              checked={!!toObject.halt}\n              onChange={e => {\n                setToObject({ ...toObject, halt: e.target.checked });\n              }}\n            />\n          }\n        />\n      </FormControl>\n\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => removeToObject()}\n        startIcon={<DeleteIcon />}\n      >\n        Remove\n      </Button>\n    </Box>\n  );\n};\n\nexport default ToEventForm;\n","import React from 'react';\nimport { Box, ExpansionPanelSummary, ExpansionPanel } from '@material-ui/core';\n\nimport { titleCase, suffix } from '../../helpers';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ToEventForm from './ToEventForm';\nimport IManipulator from '../../types/IManipulator';\nimport IToEventDefinition from '../../types/IToEventDefinition';\n\nconst toFields: string[] = [\n  'to',\n  'to_if_alone',\n  'to_if_held_down',\n  'to_after_key_up',\n];\n\ninterface Props {\n  manipulator: IManipulator;\n  setManipulator: (arg0: IManipulator) => void;\n}\nconst ToEventFormsContainer: React.FC<Props> = ({\n  manipulator,\n  setManipulator,\n}) => {\n  return (\n    <Box>\n      {toFields.map((toField: string, toFieldsIndex: number) => {\n        return (\n          manipulator[toField] && (\n            <ExpansionPanel key={toFieldsIndex} defaultExpanded>\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                \"{titleCase(toField)}\" Events\n              </ExpansionPanelSummary>\n              <Box p={2}>\n                {manipulator[toField].map(\n                  (to: IToEventDefinition, index: number) => {\n                    const toObject = { ...to };\n                    const setToObject = (newToObject: IToEventDefinition) => {\n                      const newManipulator = { ...manipulator };\n                      newManipulator[toField][index] = newToObject;\n                      setManipulator(newManipulator);\n                    };\n                    const removeToObject = () => {\n                      const newManipulator = { ...manipulator };\n                      newManipulator[toField].splice(index, 1);\n                      setManipulator(newManipulator);\n                    };\n\n                    const toEventFormProps = {\n                      toObject,\n                      setToObject,\n                      removeToObject,\n                    };\n                    return (\n                      <ExpansionPanel key={index} defaultExpanded={index === 0}>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                          {index + 1}\n                          {suffix(index + 1)} \"{titleCase(toField)}\" Event\n                        </ExpansionPanelSummary>\n                        <Box p={1}>\n                          <ToEventForm {...toEventFormProps} />\n                        </Box>\n                      </ExpansionPanel>\n                    );\n                  },\n                )}\n              </Box>\n            </ExpansionPanel>\n          )\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default ToEventFormsContainer;\n","import React from 'react';\nimport {\n  Select,\n  Box,\n  ButtonGroup,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  ExpansionPanelSummary,\n  ExpansionPanel,\n  Button,\n  Typography,\n} from '@material-ui/core';\n\nimport { titleCase } from '../../helpers';\nimport AddConditionForm from './AddConditionForm';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport IManipulator from '../../types/IManipulator';\nimport ICondition from '../../types/ICondition';\nimport FromEventForm from './FromEventForm';\nimport IFromEventDefinition from '../../types/IFromEventDefinition';\nimport ToEventFormsContainer from './ToEventFormsContainer';\nimport _ from 'lodash';\n\nconst toFields: string[] = [\n  'to',\n  'to_if_alone',\n  'to_if_held_down',\n  'to_after_key_up',\n];\nconst types: string[] = [\n  'basic',\n  'frontmost_application_if',\n  'frontmost_application_unless',\n  'device_if',\n  'device_unless',\n  'keyboard_type_if',\n  'keyboard_type_unless',\n  'input_source_if',\n  'input_source_unless',\n  'variable_if',\n  'variable_unless',\n  'event_changed_if',\n  'event_changed_unless',\n];\n\ninterface Props {\n  manipulator: IManipulator;\n  setManipulator: (arg0: IManipulator) => void;\n}\n\nconst ManipulatorForm: React.FC<Props> = ({ manipulator, setManipulator }) => {\n  // add 'to event form'\n  const addToEventForm = (type: string) => {\n    const newManipulator = { ...manipulator };\n    newManipulator[type] = newManipulator[type] || [];\n    newManipulator[type].push({ repeat: true, _id: _.uniqueId(type + '_') });\n    setManipulator(newManipulator);\n  };\n  const addConditionToRule = () => {\n    const newManipulator = { ...manipulator };\n    newManipulator.conditions = newManipulator.conditions || [];\n    newManipulator.conditions.push({\n      type: 'frontmost_application_if',\n    });\n    setManipulator(newManipulator);\n  };\n\n  const setFromObject = (newFromObject: IFromEventDefinition) => {\n    const newManipulator = { ...manipulator, from: newFromObject };\n    setManipulator(newManipulator);\n  };\n\n  return (\n    <div>\n      <FormControl variant=\"filled\" fullWidth>\n        <InputLabel id=\"type\">Type*</InputLabel>\n        <Select\n          labelId=\"type\"\n          value={manipulator.type}\n          onChange={(e: any) => {\n            setManipulator({ ...manipulator, type: e.target.value });\n          }}\n        >\n          {types.map(type => (\n            <MenuItem value={type} key={type}>\n              {titleCase(type)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <ExpansionPanel defaultExpanded>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          \"From\" Event*\n        </ExpansionPanelSummary>\n        <FromEventForm\n          fromObject={manipulator.from}\n          setFromObject={setFromObject}\n        />\n      </ExpansionPanel>\n      <ToEventFormsContainer\n        manipulator={manipulator}\n        setManipulator={setManipulator}\n      />\n\n      {manipulator.conditions && (\n        <ExpansionPanel defaultExpanded>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            Rule Conditions\n          </ExpansionPanelSummary>\n          <Box p={1}>\n            {manipulator.conditions.map(\n              (condition: ICondition, index: number) => {\n                return (\n                  <AddConditionForm\n                    key={index}\n                    index={index}\n                    condition={condition}\n                  />\n                );\n              },\n            )}\n          </Box>\n        </ExpansionPanel>\n      )}\n\n      <Box>\n        <Typography>Add \"To\" Events</Typography>\n        <ButtonGroup>\n          {toFields.map((toField: string) => {\n            return (\n              <Button\n                key={toField}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  addToEventForm(toField);\n                }}\n                size=\"small\"\n              >\n                {toField}\n              </Button>\n            );\n          })}\n        </ButtonGroup>\n      </Box>\n      <Box marginTop={1}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            addConditionToRule();\n          }}\n        >\n          Add Conditions\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default ManipulatorForm;\n","import React from 'react';\nimport { Box, TextField, Button } from '@material-ui/core';\n\nimport FormContext from '../../context/FormContext';\nimport ManipulatorForm from './ManipulatorForm';\nimport IManipulator from '../../types/IManipulator';\nimport IRule from '../../types/IRule';\nimport _ from 'lodash';\n\ninterface Props {\n  rule: IRule;\n  setRule: (arg0: IRule) => void;\n}\n\nconst RuleForm: React.FC<Props> = ({ rule, setRule }) => {\n  const setManipulator = (newManipulator: IManipulator) => {\n    const index = _.findIndex(rule.manipulators, { _id: newManipulator._id });\n    const newRule = { ...rule };\n    newRule.manipulators[index] = { ...newManipulator };\n    setRule(newRule);\n  };\n  return (\n    <Box>\n      <TextField\n        label=\"Description (optional)\"\n        variant=\"filled\"\n        value={rule.description}\n        onChange={e => setRule({ ...rule, description: e.target.value })}\n        multiline\n        fullWidth\n      />\n      {rule.manipulators.map((manipulator: IManipulator, index: number) => {\n        return (\n          <ManipulatorForm\n            manipulator={manipulator}\n            key={index}\n            setManipulator={setManipulator}\n          />\n        );\n      })}\n\n      <Button>Add Manipulator</Button>\n    </Box>\n  );\n};\n\nexport default RuleForm;\n","import { createContext } from 'react';\nimport IToEventDefinition from '../types/IToEventDefinition';\n\ntype ContextProps = {\n  setFormState: any;\n  formState: any;\n  setRuleState: any;\n  getRuleByIndex: any;\n};\n\nconst FormContext = createContext<Partial<ContextProps>>({\n  setFormState: () => {},\n  setRuleState: () => {},\n  getRuleByIndex: () => {},\n  formState: {},\n});\n\nexport default FormContext;\n","import IFromEventDefinition from './types/IFromEventDefinition';\n\nexport const initialFromObject: IFromEventDefinition = {\n  simultaneous: [],\n  modifiers: {\n    optional: [],\n    mandatory: [],\n  },\n};\n","import React, { useState } from 'react';\nimport RuleForm from './forms/RuleForm';\nimport FormContext from '../context/FormContext';\nimport {\n  Grid,\n  Button,\n  TextField,\n  Box,\n  ExpansionPanelSummary,\n  ExpansionPanel,\n  Container,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport { suffix, titleCase } from '../helpers';\nimport _ from 'lodash';\nimport IRule from '../types/IRule';\nimport IManipulator from '../types/IManipulator';\nimport IFromEventDefinition from '../types/IFromEventDefinition';\nimport { initialFromObject } from '../initialStates';\nimport IToEventDefinition from '../types/IToEventDefinition';\nimport ISimultaneous from '../types/ISimultaneous';\n\ninterface Props {}\ninterface FormState {\n  title: string;\n  rules: any[];\n}\n\nconst initialManipulator: IManipulator = {\n  type: 'basic',\n  from: {\n    modifiers: {\n      mandatory: [],\n      optional: [],\n    },\n    simultaneous: [],\n  },\n};\n\nconst getInitialRule = (): IRule => {\n  return {\n    ...generateWithId({ description: '' }, 'rule'),\n    manipulators: [generateWithId(initialManipulator, 'manipulator')],\n  };\n};\n\nconst generateWithId = (obj: any = {}, prefix: string = '') => {\n  if (prefix.length) {\n    prefix += '_';\n  }\n  return { ...obj, _id: _.uniqueId(prefix) };\n};\n\n// TODO: move to separate file\nconst toFields: string[] = [\n  'to',\n  'to_if_alone',\n  'to_if_held_down',\n  'to_after_key_up',\n];\n\nconst parseJSONfirst = (text: string) => {\n  let parsedJSON = JSON.parse(text);\n\n  // make sure from values have modifiers object\n  parsedJSON.rules = parsedJSON.rules.map((rule: IRule) => {\n    const newRule: IRule = generateWithId(rule, 'rule');\n    newRule.manipulators = newRule.manipulators.map(\n      (manipulator: IManipulator) => {\n        const newManipulator = generateWithId(manipulator, 'manipulator');\n        toFields.forEach((toField: string) => {\n          if (newManipulator[toField]) {\n            if (_.isPlainObject(newManipulator[toField])) {\n              newManipulator[toField] = [newManipulator[toField]];\n            }\n            // newManipulator[toField] = [...manipulator[toField]];\n            newManipulator[toField] = newManipulator[toField].map(\n              (toObject: IToEventDefinition) => {\n                return generateWithId(toObject, toField);\n              },\n            );\n          }\n        });\n\n        return newManipulator;\n      },\n    );\n    return newRule;\n  });\n\n  return parsedJSON;\n};\nconst parseKey = (key: any) => (typeof key === 'string' ? key : key.value);\n\nconst parseKeys = (modifiers: any[]) => {\n  return modifiers.map(parseKey);\n};\n\nconst parseFromObject = (fromObject: IFromEventDefinition) => {\n  const _from: IFromEventDefinition = Object.assign(\n    {},\n    initialFromObject,\n    fromObject,\n  );\n\n  if (typeof _from.key_code === 'object') {\n    _from.key_code = parseKey(_from.key_code);\n  }\n\n  if (_from.modifiers) {\n    if (_from.modifiers.mandatory) {\n      if (_from.modifiers.mandatory?.length === 0) {\n        delete _from.modifiers.mandatory;\n      } else {\n        if (typeof _from.modifiers.mandatory === 'string') {\n          _from.modifiers.mandatory = [_from.modifiers.mandatory];\n        }\n        _from.modifiers.mandatory = parseKeys(_from.modifiers.mandatory);\n      }\n    }\n\n    if (_from.modifiers.optional) {\n      if (_from.modifiers.optional.length === 0) {\n        delete _from.modifiers.optional;\n      } else {\n        if (typeof _from.modifiers.optional === 'string') {\n          _from.modifiers.optional = [_from.modifiers.optional];\n        }\n        _from.modifiers.optional = parseKeys(_from.modifiers.optional);\n      }\n    }\n  }\n\n  if (!_from.pointing_button || _from.pointing_button === 'disabled') {\n    delete _from.pointing_button;\n  }\n\n  if (_.isEmpty(_from.modifiers)) {\n    delete _from.modifiers;\n  }\n\n  return _from;\n};\n\nconst parseStateToMinimumJSON = (state: any) => {\n  const parsedState = _.cloneDeep(state);\n\n  parsedState.rules.forEach((rule: any, ruleIndex: number) => {\n    if (!rule?.description?.length) {\n      delete rule.description;\n    }\n    rule.manipulators.forEach((manipulator: IManipulator) => {\n      manipulator.from = parseFromObject(manipulator.from);\n\n      const newSimultaneous: ISimultaneous[] = [];\n      manipulator?.from?.simultaneous?.forEach(\n        (simultaneous: ISimultaneous) => {\n          delete simultaneous._id;\n          if (simultaneous?.key_code?.value) {\n            simultaneous.key_code = simultaneous.key_code.value;\n          }\n          if (!_.isEmpty(simultaneous)) {\n            newSimultaneous.push(simultaneous);\n          }\n        },\n      );\n\n      toFields.forEach(toField => {\n        if (!manipulator[toField]) return;\n        manipulator[toField] = manipulator[toField].map(\n          (toObject: IToEventDefinition) => {\n            delete toObject._id;\n            if (toObject.key_code) {\n              toObject.key_code = parseKey(toObject.key_code);\n            }\n            if (toObject.modifiers) {\n              toObject.modifiers =\n                typeof toObject.modifiers === 'string'\n                  ? toObject.modifiers\n                  : parseKeys(toObject.modifiers);\n            }\n            return toObject;\n          },\n        );\n      });\n      manipulator.from.simultaneous = newSimultaneous;\n\n      if (_.isEmpty(manipulator.from.simultaneous)) {\n        delete manipulator.from.simultaneous;\n      }\n      delete manipulator._id;\n    });\n    delete rule._id;\n  });\n\n  return parsedState;\n};\n\nconst MainForm: React.FC<Props> = () => {\n  let initialFormState = {\n    title: '',\n    rules: [getInitialRule()],\n  };\n\n  try {\n    initialFormState =\n      JSON.parse(\n        window.atob(\n          window.location.href.slice(window.location.href.indexOf('#') + 1),\n        ),\n      ) || initialFormState;\n  } catch (e) {}\n\n  const [formState, setFormState] = useState<FormState>(initialFormState);\n\n  const parsedState = parseStateToMinimumJSON(formState);\n\n  const setRule = (newRule: IRule) => {\n    const index = _.findIndex(formState.rules, { _id: newRule._id });\n    const newFormState = _.cloneDeep(formState);\n    newFormState.rules[index] = { ...newFormState.rules[index], ...newRule };\n    setFormState({ ...newFormState });\n  };\n\n  const getRuleByIndex = (index: number): any => formState.rules[index];\n\n  const addRule = () => {\n    const newFormState = { ...formState };\n    newFormState.rules = newFormState.rules || [];\n    newFormState.rules.push(getInitialRule());\n    setFormState({ ...newFormState });\n  };\n\n  const install = () => {\n    const base64string = window.btoa(JSON.stringify(parsedState));\n    let url = `karabiner://karabiner/assets/complex_modifications/import?url=data:application/json;charset=utf-8;base64,${base64string}`;\n    window.location.href = url;\n  };\n  const generateUrl = () => {\n    const base64string = window.btoa(JSON.stringify(parsedState));\n    window.history.replaceState(undefined, '', '#' + base64string);\n    alert('copy the url in your addess bar to share');\n  };\n\n  return (\n    <FormContext.Provider\n      value={{\n        formState,\n        setFormState,\n        getRuleByIndex,\n      }}\n    >\n      <Container>\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Grid item xs>\n            <Box p={1}>\n              <TextField\n                fullWidth\n                onChange={e =>\n                  setFormState({ ...formState, title: e.currentTarget.value })\n                }\n                value={formState.title}\n                variant=\"filled\"\n                label=\"Title\"\n              />\n              {formState.rules.map((rule, index) => (\n                <ExpansionPanel defaultExpanded={index === 0} key={index}>\n                  <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    {index +\n                      1 +\n                      suffix(index + 1) +\n                      ' Rule' +\n                      (rule.description ? ': ' + rule.description : '')}\n                  </ExpansionPanelSummary>\n                  <Box p={1}>\n                    <RuleForm key={index} rule={rule} setRule={setRule} />\n                  </Box>\n                </ExpansionPanel>\n              ))}\n\n              <Button\n                onClick={addRule}\n                color=\"primary\"\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n              >\n                Rule\n              </Button>\n            </Box>\n          </Grid>\n          <Grid container xs item direction=\"column\">\n            <Grid item xs>\n              <textarea\n                className=\"generated-code\"\n                // value={JSON.stringify(formState, null, 2)}\n                readOnly\n                value={JSON.stringify(parsedState, null, 2)}\n              />\n              <Button onClick={install} color=\"primary\" variant=\"contained\">\n                Install!\n              </Button>\n              <Button onClick={generateUrl} color=\"primary\" variant=\"contained\">\n                Get Shareable Copy of this Rule\n              </Button>\n            </Grid>\n            {/* <Grid item xs>\n              <textarea\n                className=\"generated-code\"\n                value={JSON.stringify(formState, null, 2)}\n                readOnly\n                // value={JSON.stringify(parseStateToMinimumJSON(formState), null, 2)}\n              />\n            </Grid> */}\n            <Grid container item xs>\n              <textarea\n                placeholder=\"Try pasting existing complex modifications here. The simpler the better, everything is still experimental.\"\n                className=\"generated-code\"\n                onBlur={e => {\n                  try {\n                    if (e.target.value)\n                      setFormState(parseJSONfirst(e.target.value));\n                  } catch (e) {\n                    console.log({ e });\n                  }\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </FormContext.Provider>\n  );\n};\nexport default MainForm;\n","import React from 'react';\nimport {\n  Container,\n  AppBar,\n  Typography,\n  Toolbar,\n  Grid,\n} from '@material-ui/core';\n\nimport MainForm from './components/MainForm';\n\ninterface Props {}\n\nconst AppLayout: React.FC<Props> = () => {\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Container>\n          <Toolbar>\n            <Grid xs item>\n              <Typography>\n                Karabiner Complex Modification | Still a work in progress\n              </Typography>\n            </Grid>\n            <Grid xs={3} item container justify=\"space-evenly\">\n              <a\n                className=\"github-button\"\n                href=\"https://github.com/genesy/karabiner-complex-rules-generator\"\n                data-icon=\"octicon-star\"\n                data-size=\"large\"\n                data-show-count=\"true\"\n                aria-label=\"Star genesy/karabiner-complex-rules-generator on GitHub\"\n              >\n                Star\n              </a>\n              <a\n                className=\"github-button\"\n                href=\"https://github.com/genesy\"\n                data-size=\"large\"\n                data-show-count=\"true\"\n                aria-label=\"Follow @genesy on GitHub\"\n              >\n                Follow @genesy\n              </a>\n            </Grid>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <MainForm />\n    </>\n  );\n};\n\nexport default AppLayout;\n","import React from 'react';\nimport './App.css';\nimport '@material-ui/core';\nimport 'typeface-roboto';\nimport AppLayout from './AppLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppLayout></AppLayout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}