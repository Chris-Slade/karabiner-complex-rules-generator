{"version":3,"sources":["context/FormContext.tsx","constants.ts","components/shared/KeyInput.tsx","components/shared/KeyCodeAndPointingButtonInput.tsx","components/forms/FromEventForm.tsx","components/forms/ToEventForm.tsx","helpers.ts","components/forms/RulesForm.tsx","components/MainForm.tsx","AppLayout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FormContext","createContext","setFormState","setRuleState","getRuleByIndex","formState","MODIFIERS","label","value","KEY_CODES","KeyInput","onChange","e","modifiers","keyCodes","multiple","autoHighlight","freeSolo","options","placeholderText","push","Autocomplete","getOptionLabel","o","renderInput","params","TextField","variant","placeholder","join","fullWidth","pointingButtons","KeyCodeAndPointingButtonInput","setShowOptional","obj","showOptional","eventObject","setEventObject","ButtonGroup","Button","disabled","keyCode","onClick","consumerKeyCode","color","key_code","_e","v","margin","consumer_key_code","currentTarget","Box","FormControl","InputLabel","id","Select","labelId","pointing_button","event","target","map","MenuItem","key","FromEventForm","ruleIndex","useContext","ruleState","useState","mandatory","optional","fromObject","setFromObject","pointingButton","simultaneous","simultaneousOptions","useEffect","newFromObject","length","m","from","className","ToEventForm","type","index","repeat","toObject","setToObject","modifiersMandatory","modifiersOptional","newToObject","lazy","halt","toArray","console","log","FormLabel","FormControlLabel","control","Checkbox","checked","splice","removeForm","startIcon","suffix","n","d","titleCase","string","sentence","toLowerCase","split","i","toUpperCase","slice","types","toFields","RulesForm","description","multiline","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","toField","toFieldsIndex","p","to","newRuleState","addToEventForm","size","initialRule","MainForm","title","rules","Provider","rule","newFormState","newRules","Grid","container","direction","justify","item","xs","readOnly","JSON","stringify","AppLayout","AppBar","position","Container","Toolbar","Typography","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"scAiBeA,EAPKC,wBAAqC,CACvDC,aAAc,aACdC,aAAc,aACdC,eAAgB,aAChBC,UAAW,K,SCdAC,EAAY,CACvB,CACEC,MAAO,eACPC,MAAO,MAET,CACED,MAAO,eACPC,MAAO,YAET,CACED,MAAO,gBACPC,MAAO,aAET,CACED,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,gBACPC,MAAO,iBAET,CACED,MAAO,oBACPC,MAAO,YAET,CACED,MAAO,qBACPC,MAAO,aAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,cACPC,MAAO,gBAGEC,EAAY,CACvB,CACEF,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,KAET,CACED,MAAO,KACPC,MAAO,MAET,CACED,MAAO,KACPC,MAAO,MAET,CACED,MAAO,KACPC,MAAO,MAET,CACED,MAAO,KACPC,MAAO,MAET,CACED,MAAO,KACPC,MAAO,MAET,CACED,MAAO,KACPC,MAAO,MAET,CACED,MAAO,KACPC,MAAO,MAET,CACED,MAAO,KACPC,MAAO,MAET,CACED,MAAO,KACPC,MAAO,MAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,wBACPC,MAAO,0BAET,CACED,MAAO,UACPC,MAAO,OAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,WACPC,MAAO,YAET,CACED,MAAO,WACPC,MAAO,YAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,QACPC,MAAO,mBAET,CACED,MAAO,eACPC,MAAO,aAET,CACED,MAAO,mBACPC,MAAO,gBAET,CACED,MAAO,oBACPC,MAAO,iBAET,CACED,MAAO,gBACPC,MAAO,aAET,CACED,MAAO,YACPC,MAAO,SAET,CACED,MAAO,YACPC,MAAO,SAET,CACED,MAAO,aACPC,MAAO,UAET,CACED,MAAO,YACPC,MAAO,SAET,CACED,MAAO,qBACPC,MAAO,UAET,CACED,MAAO,YACPC,MAAO,cAET,CACED,MAAO,sBACPC,MAAO,uBAET,CACED,MAAO,6BACPC,MAAO,gCAET,CACED,MAAO,6BACPC,MAAO,gCAET,CACED,MAAO,kBACPC,MAAO,mBAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,+BACPC,MAAO,0BAET,CACED,MAAO,+BACPC,MAAO,0BAET,CACED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","file":"static/js/main.a3bb0639.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport IToEventDefinition from '../types/IToEventDefinition';\n\ntype ContextProps = {\n  setFormState: any;\n  formState: any;\n  setRuleState: any;\n  getRuleByIndex: any;\n};\n\nconst FormContext = createContext<Partial<ContextProps>>({\n  setFormState: () => {},\n  setRuleState: () => {},\n  getRuleByIndex: () => {},\n  formState: {},\n});\n\nexport default FormContext;\n","export const MODIFIERS = [\n  {\n    label: 'Function key',\n    value: 'fn',\n  },\n  {\n    label: 'Left Command',\n    value: 'left_gui',\n  },\n  {\n    label: 'Right Command',\n    value: 'right_gui',\n  },\n  {\n    label: 'Left Control',\n    value: 'left_control',\n  },\n  {\n    label: 'Right Control',\n    value: 'right_control',\n  },\n  {\n    label: 'Left Alt / Option',\n    value: 'left_alt',\n  },\n  {\n    label: 'Right Alt / Option',\n    value: 'right_alt',\n  },\n  {\n    label: 'Left Shift',\n    value: 'left_shift',\n  },\n  {\n    label: 'Right Shift',\n    value: 'right_shift',\n  },\n];\nexport const KEY_CODES = [\n  {\n    label: '1',\n    value: '1',\n  },\n  {\n    label: '2',\n    value: '2',\n  },\n  {\n    label: '3',\n    value: '3',\n  },\n  {\n    label: '4',\n    value: '4',\n  },\n  {\n    label: '5',\n    value: '5',\n  },\n  {\n    label: '6',\n    value: '6',\n  },\n  {\n    label: '7',\n    value: '7',\n  },\n  {\n    label: '8',\n    value: '8',\n  },\n  {\n    label: '9',\n    value: '9',\n  },\n  {\n    label: '0',\n    value: '0',\n  },\n  {\n    label: 'A',\n    value: 'a',\n  },\n  {\n    label: 'B',\n    value: 'b',\n  },\n  {\n    label: 'C',\n    value: 'c',\n  },\n  {\n    label: 'D',\n    value: 'd',\n  },\n  {\n    label: 'E',\n    value: 'e',\n  },\n  {\n    label: 'F',\n    value: 'f',\n  },\n  {\n    label: 'G',\n    value: 'g',\n  },\n  {\n    label: 'H',\n    value: 'h',\n  },\n  {\n    label: 'I',\n    value: 'i',\n  },\n  {\n    label: 'J',\n    value: 'j',\n  },\n  {\n    label: 'K',\n    value: 'k',\n  },\n  {\n    label: 'L',\n    value: 'l',\n  },\n  {\n    label: 'M',\n    value: 'm',\n  },\n  {\n    label: 'N',\n    value: 'n',\n  },\n  {\n    label: 'O',\n    value: 'o',\n  },\n  {\n    label: 'P',\n    value: 'p',\n  },\n  {\n    label: 'Q',\n    value: 'q',\n  },\n  {\n    label: 'R',\n    value: 'r',\n  },\n  {\n    label: 'S',\n    value: 's',\n  },\n  {\n    label: 'T',\n    value: 't',\n  },\n  {\n    label: 'U',\n    value: 'u',\n  },\n  {\n    label: 'V',\n    value: 'v',\n  },\n  {\n    label: 'W',\n    value: 'w',\n  },\n  {\n    label: 'X',\n    value: 'x',\n  },\n  {\n    label: 'Y',\n    value: 'y',\n  },\n  {\n    label: 'Z',\n    value: 'z',\n  },\n  {\n    label: 'F1',\n    value: 'f1',\n  },\n  {\n    label: 'F2',\n    value: 'f2',\n  },\n  {\n    label: 'F3',\n    value: 'f3',\n  },\n  {\n    label: 'F4',\n    value: 'f4',\n  },\n  {\n    label: 'F5',\n    value: 'f5',\n  },\n  {\n    label: 'F6',\n    value: 'f6',\n  },\n  {\n    label: 'F7',\n    value: 'f7',\n  },\n  {\n    label: 'F8',\n    value: 'f8',\n  },\n  {\n    label: 'F9',\n    value: 'f9',\n  },\n  {\n    label: 'F10',\n    value: 'f10',\n  },\n  {\n    label: 'F11',\n    value: 'f11',\n  },\n  {\n    label: 'F12',\n    value: 'f12',\n  },\n  {\n    label: 'Escape',\n    value: 'escape',\n  },\n  {\n    label: '` Grave Accent, Tilde',\n    value: 'grave_accent_and_tilde',\n  },\n  {\n    label: 'Tab key',\n    value: 'tab',\n  },\n  {\n    label: 'Caps Lock',\n    value: 'caps_lock',\n  },\n  {\n    label: 'Spacebar',\n    value: 'spacebar',\n  },\n  {\n    label: 'Up Arrow',\n    value: 'up_arrow',\n  },\n  {\n    label: 'Left Arrow',\n    value: 'left_arrow',\n  },\n  {\n    label: 'Down Arrow',\n    value: 'down_arrow',\n  },\n  {\n    label: 'Right Arrow',\n    value: 'right_arrow',\n  },\n  {\n    label: 'Enter',\n    value: 'return_or_enter',\n  },\n  {\n    label: ' (Backslash)',\n    value: 'backslash',\n  },\n  {\n    label: '[ (Open Bracket)',\n    value: 'open_bracket',\n  },\n  {\n    label: '] (Close Bracket)',\n    value: 'close_bracket',\n  },\n  {\n    label: '; (Semicolon)',\n    value: 'semicolon',\n  },\n  {\n    label: \"' (Quote)\",\n    value: 'quote',\n  },\n  {\n    label: ', (Comma)',\n    value: 'comma',\n  },\n  {\n    label: '. (Period)',\n    value: 'period',\n  },\n  {\n    label: '/ (Slash)',\n    value: 'slash',\n  },\n  {\n    label: '- (Dash or Hyphen)',\n    value: 'hyphen',\n  },\n  {\n    label: '= (Equal)',\n    value: 'equal_sign',\n  },\n  {\n    label: 'Delete or Backspace',\n    value: 'delete_or_backspace',\n  },\n  {\n    label: 'Decrease Screen Brightness',\n    value: 'display_brightness_decrement',\n  },\n  {\n    label: 'Increase Screen Brightness',\n    value: 'display_brightness_increment',\n  },\n  {\n    label: 'Mission Control',\n    value: 'mission_control',\n  },\n  {\n    label: 'Launchpad',\n    value: 'launchpad',\n  },\n  {\n    label: 'Keyboard Brightness Decrease',\n    value: 'illumination_decrement',\n  },\n  {\n    label: 'Keyboard Brightness Increase',\n    value: 'illumination_increment',\n  },\n  {\n    label: 'Rewind / Previous',\n    value: 'rewind',\n  },\n  {\n    label: 'Play or Pause',\n    value: 'play_or_pause',\n  },\n  {\n    label: 'Fastfoward / Next',\n    value: 'fastforwad',\n  },\n  {\n    label: 'Mute',\n    value: 'mute',\n  },\n  {\n    label: 'Volume Down',\n    value: 'volume_decrement',\n  },\n  {\n    label: 'Volume Up',\n    value: 'volume_increment',\n  },\n];\n","import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { MODIFIERS, KEY_CODES } from '../../constants';\nimport { TextField } from '@material-ui/core';\nimport Modifier from '../../types/Modifier';\n\ninterface Props {\n  // value: Modifier[];\n  value: any;\n  onChange: (e: any, value: any) => void;\n  modifiers?: boolean;\n  keyCodes?: boolean;\n  multiple?: any;\n  autoHighlight?: boolean;\n  freeSolo?: boolean;\n  label?: string;\n}\n\nconst KeyInput: React.FC<Props> = ({\n  value = [],\n  onChange = e => {},\n  modifiers = false,\n  keyCodes = false,\n  multiple = true,\n  autoHighlight = false,\n  freeSolo = true,\n  label = 'keys',\n}) => {\n  let options: Modifier[] = [];\n  let placeholderText: string[] = [];\n  if (keyCodes) {\n    options = [...options, ...KEY_CODES];\n    placeholderText.push('Key Codes');\n  }\n  if (modifiers) {\n    options = [...options, ...MODIFIERS];\n    placeholderText.push('Modifiers');\n  }\n  return (\n    <Autocomplete\n      multiple={multiple}\n      freeSolo={freeSolo}\n      options={options}\n      getOptionLabel={(o: any) => (typeof o === 'object' ? o.label : o) || ''}\n      value={value}\n      onChange={onChange}\n      autoHighlight={autoHighlight}\n      renderInput={params => (\n        <TextField\n          {...params}\n          variant=\"filled\"\n          label={label}\n          placeholder={placeholderText.join(', ')}\n          fullWidth\n        />\n      )}\n    />\n  );\n};\n\nexport default KeyInput;\n","import React from 'react';\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  ButtonGroup,\n  Button,\n  Typography,\n  FormControl,\n  Box,\n} from '@material-ui/core';\nimport KeyInput from './KeyInput';\nconst pointingButtons: any[] = [\n  {\n    label: 'None',\n    value: 'disabled',\n  },\n  {\n    label: 'Left Click',\n    value: 'button1',\n  },\n  {\n    label: 'Right Click',\n    value: 'button2',\n  },\n  {\n    label: 'Middle Click',\n    value: 'button3',\n  },\n  {\n    label: 'Mouse 4',\n    value: 'button4',\n  },\n  {\n    label: 'Mouse 5',\n    value: 'button5',\n  },\n];\n\ninterface Props {\n  showOptional: any;\n  eventObject: any;\n  setShowOptional: (obj: any) => void;\n  setEventObject: (obj: any) => void;\n}\n\nconst KeyCodeAndPointingButtonInput: React.FC<Props> = ({\n  setShowOptional = obj => {},\n  showOptional = {},\n  eventObject = {},\n  setEventObject = obj => {},\n}) => {\n  return (\n    <div>\n      {/* KEY CODES  */}\n      <ButtonGroup>\n        <Button\n          disabled={showOptional.keyCode}\n          variant=\"contained\"\n          onClick={() => {\n            setShowOptional({\n              ...showOptional,\n              keyCode: true,\n              consumerKeyCode: false,\n            });\n          }}\n        >\n          Key Code\n        </Button>\n        <Button\n          disabled={showOptional.consumerKeyCode}\n          variant=\"contained\"\n          onClick={() => {\n            setShowOptional({\n              ...showOptional,\n              keyCode: false,\n              consumerKeyCode: true,\n            });\n          }}\n        >\n          Consumer Key Code\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setShowOptional({\n              ...showOptional,\n              keyCode: false,\n              consumerKeyCode: false,\n            });\n          }}\n          disabled={!(showOptional.keyCode || showOptional.consumerKeyCode)}\n          color=\"secondary\"\n        >\n          Disable\n        </Button>\n      </ButtonGroup>\n      <div>\n        {showOptional.keyCode && (\n          <KeyInput\n            keyCodes\n            modifiers\n            multiple={false}\n            value={eventObject.key_code}\n            autoHighlight={false}\n            label=\"Key Code (optional)\"\n            onChange={(_e: any, v: any) => {\n              setEventObject({\n                ...eventObject,\n                key_code: typeof v === 'string' ? { label: v, value: v } : v,\n              });\n            }}\n          />\n        )}\n        {showOptional.consumerKeyCode && (\n          <TextField\n            placeholder=\"\"\n            margin=\"normal\"\n            variant=\"filled\"\n            label=\"Consumer Key Code (optional)\"\n            fullWidth\n            value={eventObject.consumer_key_code || ''}\n            onChange={e =>\n              setEventObject({\n                ...eventObject,\n                consumer_key_code: e.currentTarget.value,\n              })\n            }\n          />\n        )}\n      </div>\n\n      <Box>\n        <FormControl variant=\"filled\" fullWidth>\n          <InputLabel id=\"type\">Pointing Button (optional)</InputLabel>\n          <Select\n            labelId=\"type\"\n            value={eventObject.pointing_button || ''}\n            onChange={(event: any) => {\n              setEventObject({\n                ...eventObject,\n                pointing_button: event.target.value || '',\n              });\n            }}\n          >\n            {pointingButtons.map(({ label, value }) => (\n              <MenuItem value={value} key={value}>\n                {label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n    </div>\n  );\n};\n\nexport default KeyCodeAndPointingButtonInput;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Box } from '@material-ui/core';\n\nimport FormContext from '../../context/FormContext';\nimport IFromEventDefinition from '../../types/IFromEventDefinition';\nimport Modifier from '../../types/Modifier';\nimport KeyInput from '../shared/KeyInput';\nimport KeyCodeAndPointingButtonInput from '../shared/KeyCodeAndPointingButtonInput';\n\nconst optionalBoolean: string[] = ['unset', 'true', 'false'];\nconst keyOrder: string[] = ['unset', 'insensitive', 'strict', 'strict_inverse'];\nconst keyUpWhen: string[] = ['unset', 'any', 'all'];\n\ninterface Props {\n  ruleIndex: number;\n}\n\nconst FromEventForm: React.FC<Props> = ({ ruleIndex }) => {\n  const { getRuleByIndex, setRuleState } = useContext(FormContext);\n  const ruleState = getRuleByIndex(ruleIndex);\n\n  const [fromObject, setFromObject] = useState<IFromEventDefinition>({\n    pointing_button: 'disabled',\n    modifiers: {\n      mandatory: [],\n      optional: [],\n    },\n  });\n\n  const [showOptional, setShowOptional] = useState({\n    keyCode: false,\n    consumerKeyCode: false,\n    pointingButton: false,\n    simultaneous: false,\n    simultaneousOptions: false,\n  });\n\n  useEffect(() => {\n    const newFromObject: any = {\n      ...fromObject,\n      modifiers: { ...fromObject.modifiers },\n    };\n    if (newFromObject.pointing_button === 'disabled') {\n      delete newFromObject.pointing_button;\n    }\n    if (!showOptional.keyCode && !!newFromObject.key_code) {\n      delete newFromObject.key_code;\n    } else {\n      newFromObject.key_code = newFromObject.key_code?.value;\n    }\n    if (!showOptional.consumerKeyCode && !!newFromObject.consumer_key_code) {\n      delete newFromObject.consumer_key_code;\n    }\n    if (!newFromObject.modifiers?.mandatory.length) {\n      delete newFromObject.modifiers.mandatory;\n    } else {\n      newFromObject.modifiers.mandatory = newFromObject.modifiers.mandatory.map(\n        (m: Modifier) => m.value,\n      );\n    }\n\n    if (!newFromObject.modifiers?.optional.length) {\n      delete newFromObject.modifiers.optional;\n    } else {\n      newFromObject.modifiers.optional = newFromObject.modifiers.optional.map(\n        (m: Modifier) => m.value,\n      );\n    }\n    if (\n      !newFromObject.modifiers.mandatory &&\n      !newFromObject.modifiers.optional\n    ) {\n      delete newFromObject.modifiers;\n    }\n\n    setRuleState(ruleIndex, { ...ruleState, from: newFromObject });\n  }, [fromObject, showOptional]);\n\n  return (\n    <Box className=\"form-container\">\n      <KeyCodeAndPointingButtonInput\n        setShowOptional={setShowOptional}\n        showOptional={showOptional}\n        setEventObject={setFromObject}\n        eventObject={fromObject}\n      />\n      <div>\n        <div>\n          <KeyInput\n            modifiers\n            value={fromObject.modifiers.mandatory}\n            label=\"Mandatory Modifiers (optional)\"\n            onChange={(_e: any, value: any) => {\n              setFromObject({\n                ...fromObject,\n                modifiers: {\n                  ...fromObject.modifiers,\n                  mandatory: value.map((v: any) =>\n                    typeof v === 'string' ? { label: v, value: v } : v,\n                  ),\n                },\n              });\n            }}\n          />\n        </div>\n        <div>\n          <KeyInput\n            modifiers\n            value={fromObject.modifiers.optional}\n            label=\"Optional Modifiers (optional)\"\n            onChange={(e: any, value: any) => {\n              setFromObject({\n                ...fromObject,\n                modifiers: {\n                  ...fromObject.modifiers,\n                  optional: value.map((v: any) =>\n                    typeof v === 'string' ? { label: v, value: v } : v,\n                  ),\n                },\n              });\n            }}\n          />\n        </div>\n      </div>\n      {/* <div>Simultaneous options coming soon</div> */}\n      {/* <div>\n        <Typography variant=\"h5\">Simultaneous</Typography>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setShowOptional({\n              ...showOptional,\n              simultaneous: !showOptional.simultaneous,\n            });\n          }}\n        >\n          {showOptional.simultaneous ? 'Remove' : 'Add'} Simultaneous\n        </Button>\n        {showOptional.simultaneous && (\n          <div>\n            <Button>Add key_code</Button>\n            <Button>Add consumer_key_code</Button>\n            <Button>Add pointing_buttone</Button>\n\n            <div>\n              Simultaneous Options\n              <InputLabel id=\"detect_key_down_uninterruptedly\">\n                detect_key_down_uninterruptedly\n              </InputLabel>\n              <Select\n                labelId=\"detect_key_down_uninterruptedly\"\n                value={optionalBoolean[0]}\n              >\n                {optionalBoolean.map(item => (\n                  <MenuItem value={item} key={item}>\n                    {item}\n                  </MenuItem>\n                ))}\n              </Select>\n              <InputLabel id=\"key_down_order\">key_down_order</InputLabel>\n              <Select labelId=\"key_down_order\" value={keyOrder[0]}>\n                {keyOrder.map(item => (\n                  <MenuItem value={item} key={item}>\n                    {item}\n                  </MenuItem>\n                ))}\n              </Select>\n              <InputLabel id=\"key_up_order\">key_up_order</InputLabel>\n              <Select labelId=\"key_uporder\" value={keyOrder[0]}>\n                {keyOrder.map(item => (\n                  <MenuItem value={item} key={item}>\n                    {item}\n                  </MenuItem>\n                ))}\n              </Select>\n            </div>\n          </div>\n        )}\n      </div> */}\n    </Box>\n  );\n};\n\nexport default FromEventForm;\n","import React, { useState, useContext, useEffect } from 'react';\nimport KeyCodeAndPointingButtonInput from '../shared/KeyCodeAndPointingButtonInput';\nimport FormContext from '../../context/FormContext';\nimport IToEventDefinition from '../../types/IToEventDefinition';\nimport Modifier from '../../types/Modifier';\nimport {\n  Typography,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n  Button,\n} from '@material-ui/core';\nimport KeyInput from '../shared/KeyInput';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\ninterface Props {\n  type: string;\n  index: number;\n  ruleIndex: number;\n}\n\nconst ToEventForm: React.FC<Props> = ({ type, index, ruleIndex }) => {\n  const { getRuleByIndex, setRuleState } = useContext(FormContext);\n  const ruleState = getRuleByIndex(ruleIndex);\n  const [toObject, setToObject] = useState<IToEventDefinition>({\n    pointing_button: 'disabled',\n    modifiers: [],\n    repeat: true,\n  });\n\n  const removeForm = () => {\n    const toArray = [...ruleState[type]];\n    toArray.splice(index, 1);\n    setRuleState(ruleIndex, { ...ruleState, [type]: toArray });\n  };\n\n  const [showOptional, setShowOptional] = useState({\n    keyCode: false,\n    consumerKeyCode: false,\n    pointingButton: false,\n    modifiersMandatory: false,\n    modifiersOptional: false,\n    simultaneous: false,\n    simultaneousOptions: false,\n  });\n\n  useEffect(() => {\n    const newToObject: any = { ...toObject };\n    if (newToObject.pointing_button === 'disabled') {\n      delete newToObject.pointing_button;\n    }\n    if (!showOptional.keyCode && !!newToObject.key_code) {\n      delete newToObject.key_code;\n    } else {\n      newToObject.key_code = newToObject.key_code?.value;\n    }\n    if (!showOptional.consumerKeyCode && !!newToObject.consumer_key_code) {\n      delete newToObject.consumer_key_code;\n    }\n    if (!newToObject.modifiers?.length) {\n      delete newToObject.modifiers;\n    } else {\n      newToObject.modifiers = newToObject.modifiers.map(\n        (m: Modifier) => m.value,\n      );\n    }\n    if (newToObject.lazy === false) {\n      delete newToObject.lazy;\n    }\n    if (newToObject.repeat === true) {\n      delete newToObject.repeat;\n    }\n    if (newToObject.halt === false) {\n      delete newToObject.halt;\n    }\n    const toArray = [...ruleState[type]];\n    toArray[index] = { ...newToObject };\n\n    setRuleState(ruleIndex, {\n      ...ruleState,\n      [type]: toArray,\n    });\n  }, [toObject, showOptional]);\n  return (\n    <div className=\"form-container\">\n      <KeyCodeAndPointingButtonInput\n        showOptional={showOptional}\n        setShowOptional={setShowOptional}\n        setEventObject={setToObject}\n        eventObject={toObject}\n      />\n      <KeyInput\n        freeSolo={false}\n        modifiers\n        value={toObject.modifiers}\n        label=\"Modifiers\"\n        onChange={(e: any, value: any) => {\n          console.log({ value });\n          setToObject({\n            ...toObject,\n            modifiers: value.map((v: any) =>\n              typeof v === 'string' ? { label: v, value: v } : v,\n            ),\n          });\n        }}\n      />\n      <FormControl fullWidth>\n        <FormLabel>Additional Options</FormLabel>\n        <FormControlLabel\n          label=\"Lazy\"\n          control={\n            <Checkbox\n              checked={!!toObject.lazy}\n              onChange={e => {\n                setToObject({ ...toObject, lazy: e.target.checked });\n              }}\n            />\n          }\n        />\n        <FormControlLabel\n          label=\"Repeat\"\n          control={\n            <Checkbox\n              checked={!!toObject.repeat}\n              onChange={e => {\n                setToObject({ ...toObject, repeat: e.target.checked });\n              }}\n            />\n          }\n        />\n        <FormControlLabel\n          label=\"Halt\"\n          control={\n            <Checkbox\n              checked={!!toObject.halt}\n              onChange={e => {\n                setToObject({ ...toObject, halt: e.target.checked });\n              }}\n            />\n          }\n        />\n      </FormControl>\n\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => removeForm()}\n        startIcon={<DeleteIcon />}\n      >\n        Remove\n      </Button>\n    </div>\n  );\n};\n\nexport default ToEventForm;\n","export const suffix = (n: number) => {\n  var s = ['th', 'st', 'nd', 'rd'];\n  var d = (n | 0) % 100;\n  return d > 3 && d < 21 ? 'th' : s[d % 10] || 'th';\n};\n\nexport const titleCase = (string: string) => {\n  var sentence = string.toLowerCase().split('_');\n  for (var i = 0; i < sentence.length; i++) {\n    sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\n  }\n  return sentence.join(' ');\n};\n","import React, { useContext } from 'react';\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  Box,\n  FormControl,\n  Typography,\n  ButtonGroup,\n  TextField,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FromEventForm from './FromEventForm';\nimport FormContext from '../../context/FormContext';\nimport ToEventForm from './ToEventForm';\nimport AddIcon from '@material-ui/icons/Add';\nimport { suffix, titleCase } from '../../helpers';\n\ninterface Props {\n  index: number;\n}\n\nconst types: string[] = [\n  'basic',\n  'frontmost_application_if',\n  'frontmost_application_unless',\n  'device_if',\n  'device_unless',\n  'keyboard_type_if',\n  'keyboard_type_unless',\n  'input_source_if',\n  'input_source_unless',\n  'variable_if',\n  'variable_unless',\n  'event_changed_if',\n  'event_changed_unless',\n];\n\nconst toFields: string[] = [\n  'to',\n  'to_if_alone',\n  'to_if_held_down',\n  'to_after_key_up',\n];\n\nconst RulesForm: React.FC<Props> = ({ index: ruleIndex }) => {\n  const { getRuleByIndex, setRuleState } = useContext(FormContext);\n  const ruleState = getRuleByIndex(ruleIndex);\n\n  // add 'to event form'\n  const addToEventForm = (type: string) => {\n    const newRuleState = { ...ruleState };\n    newRuleState[type] = newRuleState[type] || [];\n    newRuleState[type].push({});\n    setRuleState(ruleIndex, newRuleState);\n  };\n  return (\n    <Box>\n      <FormControl variant=\"filled\" fullWidth>\n        <InputLabel id=\"type\">Type*</InputLabel>\n        <Select\n          labelId=\"type\"\n          value={ruleState.type}\n          onChange={e => {\n            setRuleState(ruleIndex, { ...ruleState, type: e.target.value });\n          }}\n        >\n          {types.map(type => (\n            <MenuItem value={type} key={type}>\n              {titleCase(type)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <TextField\n        label=\"Description (optional)\"\n        variant=\"filled\"\n        value={ruleState.description}\n        onChange={e =>\n          setRuleState(ruleIndex, { ...ruleState, description: e.target.value })\n        }\n        multiline\n        fullWidth\n      />\n      <ExpansionPanel defaultExpanded>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          \"From\" Event*\n        </ExpansionPanelSummary>\n        <FromEventForm ruleIndex={ruleIndex} />\n      </ExpansionPanel>\n      {toFields.map((toField: string, toFieldsIndex: number) => {\n        return (\n          ruleState[toField] && (\n            <ExpansionPanel key={toFieldsIndex} defaultExpanded>\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                \"{titleCase(toField)}\" Events\n              </ExpansionPanelSummary>\n              <Box p={2}>\n                {ruleState[toField].map((to: any, index: number) => (\n                  <ExpansionPanel key={index} defaultExpanded={index === 0}>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                      {index + 1}\n                      {suffix(index + 1)} \"{titleCase(toField)}\" Event\n                    </ExpansionPanelSummary>\n                    <Box p={1}>\n                      <ToEventForm\n                        type={toField}\n                        index={index}\n                        ruleIndex={ruleIndex}\n                      />\n                    </Box>\n                  </ExpansionPanel>\n                ))}\n              </Box>\n            </ExpansionPanel>\n          )\n        );\n      })}\n\n      <Box>\n        {toFields.map((toField: string) => {\n          return (\n            <Button\n              key={toField}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                addToEventForm(toField);\n              }}\n              startIcon={<AddIcon />}\n              size=\"small\"\n            >\n              {toField}\n            </Button>\n          );\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default RulesForm;\n","import React, { useState } from 'react';\nimport RulesForm from './forms/RulesForm';\nimport FormContext from '../context/FormContext';\nimport {\n  Grid,\n  Button,\n  TextField,\n  Box,\n  ExpansionPanelSummary,\n  ExpansionPanel,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport { suffix, titleCase } from '../helpers';\n\ninterface Props {}\ninterface FormState {\n  title: string;\n  rules: any[];\n}\n\nconst initialRule = {\n  type: 'basic',\n  from: {},\n};\n\n// TODO: move to separate file\nconst toFields: string[] = [\n  'to',\n  'to_if_alone',\n  'to_if_held_down',\n  'to_after_key_up',\n];\nconst MainForm: React.FC<Props> = () => {\n  const [formState, setFormState] = useState<FormState>({\n    title: '',\n    rules: [initialRule],\n  });\n\n  const setRuleState = (index: number, rule: any = {}) => {\n    const newFormState = { ...formState };\n    const newRules = [...formState.rules];\n    newRules[index] = { ...rule };\n    toFields.map(toField => {\n      if (newRules[index][toField]?.length === 0) {\n        delete newRules[index][toField];\n      }\n    });\n    newFormState.rules = newRules;\n    setFormState(newFormState);\n  };\n\n  const getRuleByIndex = (index: number): any => formState.rules[index];\n\n  const addRule = () => {\n    setFormState({ ...formState, rules: [...formState.rules, initialRule] });\n  };\n\n  return (\n    <FormContext.Provider\n      value={{\n        formState,\n        setFormState,\n        setRuleState,\n        getRuleByIndex,\n      }}\n    >\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item xs>\n          <Box p={1}>\n            <TextField\n              fullWidth\n              onChange={e =>\n                setFormState({ ...formState, title: e.currentTarget.value })\n              }\n              variant=\"filled\"\n              label=\"Title\"\n            />\n            {formState.rules.map((rule, index) => (\n              <ExpansionPanel defaultExpanded={index === 0} key={index}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                  {index +\n                    1 +\n                    suffix(index + 1) +\n                    ' Rule' +\n                    (rule.description ? ': ' + rule.description : '')}\n                </ExpansionPanelSummary>\n                <Box p={1}>\n                  <RulesForm index={index} key={index} />\n                </Box>\n              </ExpansionPanel>\n            ))}\n\n            <Button\n              onClick={addRule}\n              color=\"primary\"\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n            >\n              Rule\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs container>\n          <textarea\n            className=\"generated-code\"\n            readOnly\n            value={JSON.stringify(formState, null, 2)}\n          />\n        </Grid>\n      </Grid>\n    </FormContext.Provider>\n  );\n};\nexport default MainForm;\n","import React from 'react';\nimport { Container, AppBar, Typography, Toolbar } from '@material-ui/core';\n\nimport MainForm from './components/MainForm';\n\ninterface Props {}\n\nconst AppLayout: React.FC<Props> = () => {\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Container>\n          <Toolbar>\n            <Typography>Karabiner Complex Modification</Typography>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <MainForm />\n    </>\n  );\n};\n\nexport default AppLayout;\n","import React from 'react';\nimport './App.css';\nimport '@material-ui/core';\nimport 'typeface-roboto';\nimport AppLayout from './AppLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppLayout></AppLayout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}